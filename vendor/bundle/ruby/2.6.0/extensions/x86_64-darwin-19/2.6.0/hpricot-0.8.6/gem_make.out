current directory: /Users/shu/Desktop/rails-projects/medi_navi/vendor/bundle/ruby/2.6.0/gems/hpricot-0.8.6/ext/hpricot_scan
/Users/shu/.rbenv/versions/2.6.6/bin/ruby -I /Users/shu/.rbenv/versions/2.6.6/lib/ruby/site_ruby/2.6.0 -r ./siteconf20211006-8801-1nzgkan.rb extconf.rb
checking for main() in -lc... yes
creating Makefile

current directory: /Users/shu/Desktop/rails-projects/medi_navi/vendor/bundle/ruby/2.6.0/gems/hpricot-0.8.6/ext/hpricot_scan
make DESTDIR\= clean

current directory: /Users/shu/Desktop/rails-projects/medi_navi/vendor/bundle/ruby/2.6.0/gems/hpricot-0.8.6/ext/hpricot_scan
make DESTDIR\=
compiling hpricot_css.c
NONE:6:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(ID); }
                         ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:6:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(ID); }
                         ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:6:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(ID); }
                         ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:6:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(ID); }
                         ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
NONE:9:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(CLASS); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:9:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(CLASS); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:9:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(CLASS); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:9:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(CLASS); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
NONE:12:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(TAG); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:12:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(TAG); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:12:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(TAG); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:12:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(TAG); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
NONE:15:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(CHILD); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:15:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(CHILD); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:15:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(CHILD); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:15:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(CHILD); }
                         ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
NONE:18:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(POS); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:18:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(POS); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:18:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(POS); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:18:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(POS); }
                         ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
NONE:21:19: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(PSUEDO); }
                         ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
NONE:21:19: note: '{' token is here
        {{p = ((te))-1;} FILTER(PSUEDO); }
                         ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
NONE:21:19: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;} FILTER(PSUEDO); }
                         ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
NONE:21:19: note: ')' token is here
        {{p = ((te))-1;} FILTER(PSUEDO); }
                         ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:85:20: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(PSUEDO); }}
                          ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:85:20: note: '{' token is here
        {{p = ((te))-1;}{ FILTER(PSUEDO); }}
                          ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:85:20: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(PSUEDO); }}
                          ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:85:20: note: ')' token is here
        {{p = ((te))-1;}{ FILTER(PSUEDO); }}
                          ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:85:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:85:14: note: '{' token is here
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:85:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:85:14: note: ')' token is here
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:85:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:85:14: note: '{' token is here
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:85:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:85:14: note: ')' token is here
        {te = p+1;{ FILTER(PSUEDO); }}
                    ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:84:20: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(POS); }}
                          ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:84:20: note: '{' token is here
        {{p = ((te))-1;}{ FILTER(POS); }}
                          ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:84:20: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(POS); }}
                          ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:84:20: note: ')' token is here
        {{p = ((te))-1;}{ FILTER(POS); }}
                          ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:84:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(POS); }}
                    ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:84:14: note: '{' token is here
        {te = p+1;{ FILTER(POS); }}
                    ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:84:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(POS); }}
                    ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:84:14: note: ')' token is here
        {te = p+1;{ FILTER(POS); }}
                    ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:83:20: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(CHILD); }}
                          ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:83:20: note: '{' token is here
        {{p = ((te))-1;}{ FILTER(CHILD); }}
                          ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:83:20: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(CHILD); }}
                          ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:83:20: note: ')' token is here
        {{p = ((te))-1;}{ FILTER(CHILD); }}
                          ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:83:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:83:14: note: '{' token is here
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:83:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:83:14: note: ')' token is here
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:83:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:83:14: note: '{' token is here
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:83:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:83:14: note: ')' token is here
        {te = p+1;{ FILTER(CHILD); }}
                    ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:80:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(ATTR); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:80:14: note: '{' token is here
        {te = p+1;{ FILTER(ATTR); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:80:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(ATTR); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:80:14: note: ')' token is here
        {te = p+1;{ FILTER(ATTR); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:80:20: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(ATTR); }}
                          ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:80:20: note: '{' token is here
        {{p = ((te))-1;}{ FILTER(ATTR); }}
                          ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:80:20: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {{p = ((te))-1;}{ FILTER(ATTR); }}
                          ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:80:20: note: ')' token is here
        {{p = ((te))-1;}{ FILTER(ATTR); }}
                          ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:79:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(NAME); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:79:14: note: '{' token is here
        {te = p+1;{ FILTER(NAME); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:79:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTER(NAME); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:79:14: note: ')' token is here
        {te = p+1;{ FILTER(NAME); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:87:14: warning: field precision should have type 'int', but argument has type 'long' [-Wformat]
        {te = p+1;{ FILTERAUTO(); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:15:20: note: expanded from macro 'FILTERAUTO'
  sprintf(filt, "%.*s", te - ts, ts); \
                 ~~^~   ~~~~~~~
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:47:56: note: expanded from macro 'sprintf'
  __builtin___sprintf_chk (str, 0, __darwin_obsz(str), __VA_ARGS__)
                                                       ^~~~~~~~~~~
hpricot_css.rl:87:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTERAUTO(); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:16:20: note: expanded from macro 'FILTERAUTO'
  rb_funcall2(mod, rb_intern(filt), fargs, fvals); \
                   ^~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:87:14: note: '{' token is here
        {te = p+1;{ FILTERAUTO(); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:16:20: note: expanded from macro 'FILTERAUTO'
  rb_funcall2(mod, rb_intern(filt), fargs, fvals); \
                   ^~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:87:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p+1;{ FILTERAUTO(); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:16:20: note: expanded from macro 'FILTERAUTO'
  rb_funcall2(mod, rb_intern(filt), fargs, fvals); \
                   ^~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:87:14: note: ')' token is here
        {te = p+1;{ FILTERAUTO(); }}
                    ^~~~~~~~~~~~
hpricot_css.rl:16:20: note: expanded from macro 'FILTERAUTO'
  rb_funcall2(mod, rb_intern(filt), fargs, fvals); \
                   ^~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:81:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(TAG); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:81:16: note: '{' token is here
        {te = p;p--;{ FILTER(TAG); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:81:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(TAG); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:81:16: note: ')' token is here
        {te = p;p--;{ FILTER(TAG); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:77:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(ID); }}
                      ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:77:16: note: '{' token is here
        {te = p;p--;{ FILTER(ID); }}
                      ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:77:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(ID); }}
                      ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:77:16: note: ')' token is here
        {te = p;p--;{ FILTER(ID); }}
                      ^~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:82:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(MOD); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:82:16: note: '{' token is here
        {te = p;p--;{ FILTER(MOD); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:82:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(MOD); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:82:16: note: ')' token is here
        {te = p;p--;{ FILTER(MOD); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:78:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(CLASS); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:78:16: note: '{' token is here
        {te = p;p--;{ FILTER(CLASS); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:78:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(CLASS); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:78:16: note: ')' token is here
        {te = p;p--;{ FILTER(CLASS); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:85:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(PSUEDO); }}
                      ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:85:16: note: '{' token is here
        {te = p;p--;{ FILTER(PSUEDO); }}
                      ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:85:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(PSUEDO); }}
                      ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:85:16: note: ')' token is here
        {te = p;p--;{ FILTER(PSUEDO); }}
                      ^~~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:84:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(POS); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:84:16: note: '{' token is here
        {te = p;p--;{ FILTER(POS); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:84:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(POS); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:84:16: note: ')' token is here
        {te = p;p--;{ FILTER(POS); }}
                      ^~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:83:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(CHILD); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:83:16: note: '{' token is here
        {te = p;p--;{ FILTER(CHILD); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:83:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(CHILD); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:83:16: note: ')' token is here
        {te = p;p--;{ FILTER(CHILD); }}
                      ^~~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.rl:80:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(ATTR); }}
                      ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_css.rl:80:16: note: '{' token is here
        {te = p;p--;{ FILTER(ATTR); }}
                      ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_css.rl:80:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        {te = p;p--;{ FILTER(ATTR); }}
                      ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_css.rl:80:16: note: ')' token is here
        {te = p;p--;{ FILTER(ATTR); }}
                      ^~~~~~~~~~~~
hpricot_css.rl:10:20: note: expanded from macro 'FILTER'
  rb_funcall2(mod, rb_intern("" # id), fargs, fvals); \
                   ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_css.c:3407:9: warning: comparison between pointer and integer ('char *' and 'int') [-Wpointer-integer-compare]
        if ( p == eof )
             ~ ^  ~~~
hpricot_css.c:3407:12: warning: variable 'eof' is uninitialized when used here [-Wuninitialized]
        if ( p == eof )
                  ^~~
hpricot_css.rl:96:19: note: initialize the variable 'eof' to silence this warning
  int cs, act, eof;
                  ^
                   = 0
hpricot_css.c:32:18: warning: unused variable 'hpricot_css_error' [-Wunused-const-variable]
static const int hpricot_css_error = 0;
                 ^
hpricot_css.c:34:18: warning: unused variable 'hpricot_css_en_main' [-Wunused-const-variable]
static const int hpricot_css_en_main = 87;
                 ^
57 warnings generated.
compiling hpricot_scan.c
hpricot_scan.rl:260:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: note: '{' token is here
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: note: ')' token is here
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: note: '{' token is here
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:260:1: note: ')' token is here
H_ATTR(target);
^~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: note: '{' token is here
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: note: ')' token is here
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: note: '{' token is here
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:261:1: note: ')' token is here
H_ATTR(encoding);
^~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: note: '{' token is here
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: note: ')' token is here
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: note: '{' token is here
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:262:1: note: ')' token is here
H_ATTR(version);
^~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: note: '{' token is here
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: note: ')' token is here
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: note: '{' token is here
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:263:1: note: ')' token is here
H_ATTR(standalone);
^~~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: note: '{' token is here
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: note: ')' token is here
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: note: '{' token is here
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:264:1: note: ')' token is here
H_ATTR(system_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: note: '{' token is here
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: note: ')' token is here
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:247:54: note: expanded from macro 'H_ATTR'
    rb_hash_aset(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop)), x); \
                                                     ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: note: '{' token is here
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:265:1: note: ')' token is here
H_ATTR(public_id);
^~~~~~~~~~~~~~~~~
hpricot_scan.rl:251:61: note: expanded from macro 'H_ATTR'
    return rb_hash_aref(H_ELE_GET(self, H_ELE_ATTR), ID2SYM(rb_intern("" # prop))); \
                                                            ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:352:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:352:5: note: '{' token is here
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:352:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:352:5: note: ')' token is here
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:352:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:352:5: note: '{' token is here
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:352:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:352:5: note: ')' token is here
    H_ELE(cElem);
    ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:435:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:435:7: note: '{' token is here
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:435:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:435:7: note: ')' token is here
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:435:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:435:7: note: '{' token is here
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:435:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:435:7: note: ')' token is here
      H_ELE(cBogusETag);
      ^~~~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:450:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:450:5: note: '{' token is here
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:450:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:450:5: note: ')' token is here
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:450:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:450:5: note: '{' token is here
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:450:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:450:5: note: ')' token is here
    H_ELE(cCData);
    ^~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:453:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:453:5: note: '{' token is here
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:453:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:453:5: note: ')' token is here
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:453:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:453:5: note: '{' token is here
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:453:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:453:5: note: ')' token is here
    H_ELE(cComment);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:456:5: note: '{' token is here
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:456:5: note: ')' token is here
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:456:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:456:5: note: '{' token is here
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:456:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:456:5: note: ')' token is here
    H_ELE(cDocType);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:461:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      rb_hash_aset(attr, ID2SYM(rb_intern("system_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:461:33: note: '{' token is here
      rb_hash_aset(attr, ID2SYM(rb_intern("system_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:461:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      rb_hash_aset(attr, ID2SYM(rb_intern("system_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:461:33: note: ')' token is here
      rb_hash_aset(attr, ID2SYM(rb_intern("system_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:464:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      rb_hash_aset(attr, ID2SYM(rb_intern("public_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:464:33: note: '{' token is here
      rb_hash_aset(attr, ID2SYM(rb_intern("public_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:464:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      rb_hash_aset(attr, ID2SYM(rb_intern("public_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:464:33: note: ')' token is here
      rb_hash_aset(attr, ID2SYM(rb_intern("public_id")), id);
                                ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:468:35: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE match = rb_funcall(tag, rb_intern("match"), 1, reProcInsParse);
                                  ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
hpricot_scan.rl:468:35: note: '{' token is here
    VALUE match = rb_funcall(tag, rb_intern("match"), 1, reProcInsParse);
                                  ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
hpricot_scan.rl:468:35: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    VALUE match = rb_funcall(tag, rb_intern("match"), 1, reProcInsParse);
                                  ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
hpricot_scan.rl:468:35: note: ')' token is here
    VALUE match = rb_funcall(tag, rb_intern("match"), 1, reProcInsParse);
                                  ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:2602:20: note: expanded from macro 'rb_funcall'
        rb_funcallv(recv, mid, \
                          ^~~
hpricot_scan.rl:472:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:472:7: note: '{' token is here
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:472:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:472:7: note: ')' token is here
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:472:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:472:7: note: '{' token is here
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:472:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:472:7: note: ')' token is here
      H_ELE(cProcIns);
      ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:480:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:480:7: note: '{' token is here
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:480:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:480:7: note: ')' token is here
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:480:7: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:480:7: note: '{' token is here
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:480:7: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:480:7: note: ')' token is here
      H_ELE(cText);
      ^~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:484:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:484:5: note: '{' token is here
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:484:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 2 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:484:5: note: ')' token is here
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:484:5: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:484:5: note: '{' token is here
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:484:5: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:484:5: note: ')' token is here
    H_ELE(cXMLDecl);
    ^~~~~~~~~~~~~~~
hpricot_scan.rl:288:21: note: expanded from macro 'H_ELE'
        ATTR(ID2SYM(rb_intern("target")), tag);                         \
                    ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:529:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->xml = OPT(opts, xml);
             ^~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:529:14: note: '{' token is here
    S->xml = OPT(opts, xml);
             ^~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:529:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->xml = OPT(opts, xml);
             ^~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:529:14: note: ')' token is here
    S->xml = OPT(opts, xml);
             ^~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:530:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->strict = OPT(opts, xhtml_strict);
                ^~~~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:530:17: note: '{' token is here
    S->strict = OPT(opts, xhtml_strict);
                ^~~~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:530:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->strict = OPT(opts, xhtml_strict);
                ^~~~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:530:17: note: ')' token is here
    S->strict = OPT(opts, xhtml_strict);
                ^~~~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:531:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->fixup = OPT(opts, fixup_tags);
               ^~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:531:16: note: '{' token is here
    S->fixup = OPT(opts, fixup_tags);
               ^~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:531:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    S->fixup = OPT(opts, fixup_tags);
               ^~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:531:16: note: ')' token is here
    S->fixup = OPT(opts, fixup_tags);
               ^~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:51:73: note: expanded from macro 'OPT'
#define OPT(opts, key) (!NIL_P(opts) && RTEST(rb_hash_aref(opts, ID2SYM(rb_intern("" # key)))))
                                                                        ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:480:26: note: expanded from macro 'RTEST'
#define RTEST(v) RB_TEST(v)
                         ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:478:31: note: expanded from macro 'RB_TEST'
#define RB_TEST(v) !(((VALUE)(v) & (VALUE)~RUBY_Qnil) == 0)
                              ^
hpricot_scan.rl:533:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(S->doc, rb_intern("@options"), opts);
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:533:25: note: '{' token is here
    rb_ivar_set(S->doc, rb_intern("@options"), opts);
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:533:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    rb_ivar_set(S->doc, rb_intern("@options"), opts);
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:533:25: note: ')' token is here
    rb_ivar_set(S->doc, rb_intern("@options"), opts);
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:539:29: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  if (rb_ivar_defined(self, rb_intern("@buffer_size")) == Qtrue) {
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:539:29: note: '{' token is here
  if (rb_ivar_defined(self, rb_intern("@buffer_size")) == Qtrue) {
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:539:29: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  if (rb_ivar_defined(self, rb_intern("@buffer_size")) == Qtrue) {
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:539:29: note: ')' token is here
  if (rb_ivar_defined(self, rb_intern("@buffer_size")) == Qtrue) {
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:540:33: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    bufsize = rb_ivar_get(self, rb_intern("@buffer_size"));
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:540:33: note: '{' token is here
    bufsize = rb_ivar_get(self, rb_intern("@buffer_size"));
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:540:33: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    bufsize = rb_ivar_get(self, rb_intern("@buffer_size"));
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:540:33: note: ')' token is here
    bufsize = rb_ivar_get(self, rb_intern("@buffer_size"));
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:158:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:158:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("public_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:159:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:159:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("system_id")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:144:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:144:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:144:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:144:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:144:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:144:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:144:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:144:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("version")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:155:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:155:17: note: '{' token is here
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:155:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:155:17: note: ')' token is here
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:155:17: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:155:17: note: '{' token is here
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:155:17: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:155:17: note: ')' token is here
    ATTR(ID2SYM(rb_intern("encoding")), aval);
                ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:157:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:157:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:157:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
note: (skipping 1 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:157:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:95:16: note: expanded from macro 'ATTR'
    if (!NIL_P(K)) { \
               ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:481:27: note: expanded from macro 'NIL_P'
#define NIL_P(v) RB_NIL_P(v)
                          ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:479:31: note: expanded from macro 'RB_NIL_P'
#define RB_NIL_P(v) !((VALUE)(v) != RUBY_Qnil)
                              ^
hpricot_scan.rl:157:30: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:157:30: note: '{' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:157:30: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:157:30: note: ')' token is here
        { SET(aval, p); ATTR(ID2SYM(rb_intern("standalone")), aval); }
                                    ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:97:26: note: expanded from macro 'ATTR'
      rb_hash_aset(attr, K, V); \
                         ^
hpricot_scan.rl:562:29: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
         tokstart_diff = ts - buf;
                       ~ ~~~^~~~~
hpricot_scan.rl:563:27: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
         tokend_diff = te - buf;
                     ~ ~~~^~~~~
hpricot_scan.rl:564:35: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
         mark_tag_diff = mark_tag - buf;
                       ~ ~~~~~~~~~^~~~~
hpricot_scan.rl:565:37: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
         mark_akey_diff = mark_akey - buf;
                        ~ ~~~~~~~~~~^~~~~
hpricot_scan.rl:566:37: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
         mark_aval_diff = mark_aval - buf;
                        ~ ~~~~~~~~~~^~~~~
hpricot_scan.rl:582:13: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      len = RSTRING_LEN(str);
          ~ ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1000:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:996:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
hpricot_scan.rl:582:13: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      len = RSTRING_LEN(str);
          ~ ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1001:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
hpricot_scan.rl:588:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      len = RSTRING_LEN(port) + 1;
          ~ ~~~~~~~~~~~~~~~~~~^~~
hpricot_common.rl:66:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(doctype); }}
                    ^~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:66:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(doctype); }}
                    ^~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
NONE:3:19: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {{p = ((te))-1;} ELE(doctype); }
                         ^~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
NONE:6:19: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {{p = ((te))-1;} ELE(stag); }
                         ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
NONE:9:19: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {{p = ((te))-1;} ELE(emptytag); }
                         ^~~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:69:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(etag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:69:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(etag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:70:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(emptytag); }}
                    ^~~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:68:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(stag); }}
                    ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:65:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p+1;{ ELE(xmldecl); }}
                    ^~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:66:16: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        {te = p;p--;{ ELE(doctype); }}
                      ^~~~~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_scan.rl:124:7: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      ELE(text);
      ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:50:4: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        { EBLK(comment, 3); {goto st198;} }
          ^~~~~~~~~~~~~~~~
hpricot_scan.rl:116:41: note: expanded from macro 'EBLK'
#define EBLK(N, T) CAT(tag, p - T + 1); ELE(N);
                                        ^~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:55:4: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        { EBLK(cdata, 3); {goto st198;} }
          ^~~~~~~~~~~~~~
hpricot_scan.rl:116:41: note: expanded from macro 'EBLK'
#define EBLK(N, T) CAT(tag, p - T + 1); ELE(N);
                                        ^~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_common.rl:60:4: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        { EBLK(procins, 2); {goto st198;} }
          ^~~~~~~~~~~~~~~~
hpricot_scan.rl:116:41: note: expanded from macro 'EBLK'
#define EBLK(N, T) CAT(tag, p - T + 1); ELE(N);
                                        ^~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_scan.rl:637:13: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            ELE(text);
            ^~~~~~~~~
hpricot_scan.rl:68:29: note: expanded from macro 'ELE'
      raw = ts; rawlen = te - ts;                                       \
                       ~ ~~~^~~~
hpricot_scan.rl:652:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
      have = pe - ts;
           ~ ~~~^~~~
hpricot_scan.rl:803:13: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
  int len = RARRAY_LEN(members);
      ~~~   ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1058:23: note: expanded from macro 'RARRAY_LEN'
#define RARRAY_LEN(a) rb_array_len(a)
                      ^~~~~~~~~~~~~~~
hpricot_scan.rl:809:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int len = strlen(name);
        ~~~   ^~~~~~~~~~~~
hpricot_scan.rl:825:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_ElementContent = rb_intern("ElementContent");
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:825:22: note: '{' token is here
  s_ElementContent = rb_intern("ElementContent");
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:825:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_ElementContent = rb_intern("ElementContent");
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:825:22: note: ')' token is here
  s_ElementContent = rb_intern("ElementContent");
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:826:21: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  symAllow = ID2SYM(rb_intern("allow"));
                    ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:826:21: note: '{' token is here
  symAllow = ID2SYM(rb_intern("allow"));
                    ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:826:21: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  symAllow = ID2SYM(rb_intern("allow"));
                    ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:826:21: note: ')' token is here
  symAllow = ID2SYM(rb_intern("allow"));
                    ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:827:20: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  symDeny = ID2SYM(rb_intern("deny"));
                   ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:827:20: note: '{' token is here
  symDeny = ID2SYM(rb_intern("deny"));
                   ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:827:20: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  symDeny = ID2SYM(rb_intern("deny"));
                   ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:827:20: note: ')' token is here
  symDeny = ID2SYM(rb_intern("deny"));
                   ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:828:16: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_downcase = rb_intern("downcase");
               ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:828:16: note: '{' token is here
  s_downcase = rb_intern("downcase");
               ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:828:16: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_downcase = rb_intern("downcase");
               ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:828:16: note: ')' token is here
  s_downcase = rb_intern("downcase");
               ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:829:11: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_new = rb_intern("new");
          ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:829:11: note: '{' token is here
  s_new = rb_intern("new");
          ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:829:11: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_new = rb_intern("new");
          ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:829:11: note: ')' token is here
  s_new = rb_intern("new");
          ^~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:830:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_parent = rb_intern("parent");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:830:14: note: '{' token is here
  s_parent = rb_intern("parent");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:830:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_parent = rb_intern("parent");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:830:14: note: ')' token is here
  s_parent = rb_intern("parent");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:831:12: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_read = rb_intern("read");
           ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:831:12: note: '{' token is here
  s_read = rb_intern("read");
           ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:831:12: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_read = rb_intern("read");
           ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:831:12: note: ')' token is here
  s_read = rb_intern("read");
           ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:832:14: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_to_str = rb_intern("to_str");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:832:14: note: '{' token is here
  s_to_str = rb_intern("to_str");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:832:14: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  s_to_str = rb_intern("to_str");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:832:14: note: ')' token is here
  s_to_str = rb_intern("to_str");
             ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.rl:833:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_xmldecl = ID2SYM(rb_intern("xmldecl"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:833:24: note: '{' token is here
  sym_xmldecl = ID2SYM(rb_intern("xmldecl"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:833:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_xmldecl = ID2SYM(rb_intern("xmldecl"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:833:24: note: ')' token is here
  sym_xmldecl = ID2SYM(rb_intern("xmldecl"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:834:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_doctype = ID2SYM(rb_intern("doctype"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:834:24: note: '{' token is here
  sym_doctype = ID2SYM(rb_intern("doctype"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:834:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_doctype = ID2SYM(rb_intern("doctype"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:834:24: note: ')' token is here
  sym_doctype = ID2SYM(rb_intern("doctype"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:835:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_procins = ID2SYM(rb_intern("procins"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:835:24: note: '{' token is here
  sym_procins = ID2SYM(rb_intern("procins"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:835:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_procins = ID2SYM(rb_intern("procins"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:835:24: note: ')' token is here
  sym_procins = ID2SYM(rb_intern("procins"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:836:21: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_stag = ID2SYM(rb_intern("stag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:836:21: note: '{' token is here
  sym_stag = ID2SYM(rb_intern("stag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:836:21: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_stag = ID2SYM(rb_intern("stag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:836:21: note: ')' token is here
  sym_stag = ID2SYM(rb_intern("stag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:837:21: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_etag = ID2SYM(rb_intern("etag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:837:21: note: '{' token is here
  sym_etag = ID2SYM(rb_intern("etag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:837:21: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_etag = ID2SYM(rb_intern("etag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:837:21: note: ')' token is here
  sym_etag = ID2SYM(rb_intern("etag"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:838:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_emptytag = ID2SYM(rb_intern("emptytag"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:838:25: note: '{' token is here
  sym_emptytag = ID2SYM(rb_intern("emptytag"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:838:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_emptytag = ID2SYM(rb_intern("emptytag"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:838:25: note: ')' token is here
  sym_emptytag = ID2SYM(rb_intern("emptytag"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:839:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_allowed = ID2SYM(rb_intern("allowed"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:839:24: note: '{' token is here
  sym_allowed = ID2SYM(rb_intern("allowed"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:839:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_allowed = ID2SYM(rb_intern("allowed"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:839:24: note: ')' token is here
  sym_allowed = ID2SYM(rb_intern("allowed"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:840:25: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_children = ID2SYM(rb_intern("children"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:840:25: note: '{' token is here
  sym_children = ID2SYM(rb_intern("children"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:840:25: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_children = ID2SYM(rb_intern("children"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:840:25: note: ')' token is here
  sym_children = ID2SYM(rb_intern("children"));
                        ^~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:841:24: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_comment = ID2SYM(rb_intern("comment"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:841:24: note: '{' token is here
  sym_comment = ID2SYM(rb_intern("comment"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:841:24: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_comment = ID2SYM(rb_intern("comment"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:841:24: note: ')' token is here
  sym_comment = ID2SYM(rb_intern("comment"));
                       ^~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:842:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_cdata = ID2SYM(rb_intern("cdata"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:842:22: note: '{' token is here
  sym_cdata = ID2SYM(rb_intern("cdata"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:842:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_cdata = ID2SYM(rb_intern("cdata"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:842:22: note: ')' token is here
  sym_cdata = ID2SYM(rb_intern("cdata"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:843:21: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_name = ID2SYM(rb_intern("name"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:843:21: note: '{' token is here
  sym_name = ID2SYM(rb_intern("name"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:843:21: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_name = ID2SYM(rb_intern("name"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:843:21: note: ')' token is here
  sym_name = ID2SYM(rb_intern("name"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:844:23: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_parent = ID2SYM(rb_intern("parent"));
                      ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:844:23: note: '{' token is here
  sym_parent = ID2SYM(rb_intern("parent"));
                      ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:844:23: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_parent = ID2SYM(rb_intern("parent"));
                      ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:844:23: note: ')' token is here
  sym_parent = ID2SYM(rb_intern("parent"));
                      ^~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:845:31: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_raw_attributes = ID2SYM(rb_intern("raw_attributes"));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:845:31: note: '{' token is here
  sym_raw_attributes = ID2SYM(rb_intern("raw_attributes"));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:845:31: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_raw_attributes = ID2SYM(rb_intern("raw_attributes"));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:845:31: note: ')' token is here
  sym_raw_attributes = ID2SYM(rb_intern("raw_attributes"));
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:846:27: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_raw_string = ID2SYM(rb_intern("raw_string"));
                          ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:846:27: note: '{' token is here
  sym_raw_string = ID2SYM(rb_intern("raw_string"));
                          ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:846:27: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_raw_string = ID2SYM(rb_intern("raw_string"));
                          ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:846:27: note: ')' token is here
  sym_raw_string = ID2SYM(rb_intern("raw_string"));
                          ^~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:847:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_tagno = ID2SYM(rb_intern("tagno"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:847:22: note: '{' token is here
  sym_tagno = ID2SYM(rb_intern("tagno"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:847:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_tagno = ID2SYM(rb_intern("tagno"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:847:22: note: ')' token is here
  sym_tagno = ID2SYM(rb_intern("tagno"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:848:21: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_text = ID2SYM(rb_intern("text"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:848:21: note: '{' token is here
  sym_text = ID2SYM(rb_intern("text"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:848:21: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_text = ID2SYM(rb_intern("text"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:848:21: note: ')' token is here
  sym_text = ID2SYM(rb_intern("text"));
                    ^~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:849:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_EMPTY = ID2SYM(rb_intern("EMPTY"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:849:22: note: '{' token is here
  sym_EMPTY = ID2SYM(rb_intern("EMPTY"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:849:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_EMPTY = ID2SYM(rb_intern("EMPTY"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:849:22: note: ')' token is here
  sym_EMPTY = ID2SYM(rb_intern("EMPTY"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:850:22: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_CDATA = ID2SYM(rb_intern("CDATA"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:850:22: note: '{' token is here
  sym_CDATA = ID2SYM(rb_intern("CDATA"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:850:22: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  sym_CDATA = ID2SYM(rb_intern("CDATA"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:850:22: note: ')' token is here
  sym_CDATA = ID2SYM(rb_intern("CDATA"));
                     ^~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro 'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro 'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
hpricot_scan.rl:909:26: warning: '(' and '{' tokens introducing statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  rb_const_set(mHpricot, rb_intern("ProcInsParse"),
                         ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
hpricot_scan.rl:909:26: note: '{' token is here
  rb_const_set(mHpricot, rb_intern("ProcInsParse"),
                         ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
hpricot_scan.rl:909:26: warning: '}' and ')' tokens terminating statement expression appear in different macro expansion contexts [-Wcompound-token-split-by-macro]
  rb_const_set(mHpricot, rb_intern("ProcInsParse"),
                         ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro 'RUBY_CONST_ID_CACHE'
    }
    ^
hpricot_scan.rl:909:26: note: ')' token is here
  rb_const_set(mHpricot, rb_intern("ProcInsParse"),
                         ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/shu/.rbenv/versions/2.6.6/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro 'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
hpricot_scan.c:129:18: warning: unused variable 'hpricot_scan_en_html_comment' [-Wunused-const-variable]
static const int hpricot_scan_en_html_comment = 208;
                 ^
hpricot_scan.c:130:18: warning: unused variable 'hpricot_scan_en_html_cdata' [-Wunused-const-variable]
static const int hpricot_scan_en_html_cdata = 210;
                 ^
hpricot_scan.c:131:18: warning: unused variable 'hpricot_scan_en_html_procins' [-Wunused-const-variable]
static const int hpricot_scan_en_html_procins = 212;
                 ^
hpricot_scan.c:132:18: warning: unused variable 'hpricot_scan_en_main' [-Wunused-const-variable]
static const int hpricot_scan_en_main = 198;
                 ^
hpricot_scan.rl:255:1: warning: unused function 'hpricot_ele_set_raw' [-Wunused-function]
H_PROP(raw, H_ELE_RAW);
^
hpricot_scan.rl:233:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_set_##prop(VALUE self, VALUE x) { \
               ^
<scratch space>:85:1: note: expanded from here
hpricot_ele_set_raw
^
hpricot_scan.rl:255:1: warning: unused function 'hpricot_ele_get_raw' [-Wunused-function]
hpricot_scan.rl:241:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_get_##prop(VALUE self) { \
               ^
<scratch space>:87:1: note: expanded from here
hpricot_ele_get_raw
^
hpricot_scan.rl:256:1: warning: unused function 'hpricot_ele_set_parent' [-Wunused-function]
H_PROP(parent, H_ELE_PARENT);
^
hpricot_scan.rl:233:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_set_##prop(VALUE self, VALUE x) { \
               ^
<scratch space>:88:1: note: expanded from here
hpricot_ele_set_parent
^
hpricot_scan.rl:256:1: warning: unused function 'hpricot_ele_clear_parent' [-Wunused-function]
hpricot_scan.rl:237:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_clear_##prop(VALUE self) { \
               ^
<scratch space>:89:1: note: expanded from here
hpricot_ele_clear_parent
^
hpricot_scan.rl:256:1: warning: unused function 'hpricot_ele_get_parent' [-Wunused-function]
hpricot_scan.rl:241:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_get_##prop(VALUE self) { \
               ^
<scratch space>:90:1: note: expanded from here
hpricot_ele_get_parent
^
hpricot_scan.rl:258:1: warning: unused function 'hpricot_ele_set_etag' [-Wunused-function]
H_PROP(etag, H_ELE_ETAG);
^
hpricot_scan.rl:233:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_set_##prop(VALUE self, VALUE x) { \
               ^
<scratch space>:94:1: note: expanded from here
hpricot_ele_set_etag
^
hpricot_scan.rl:258:1: warning: unused function 'hpricot_ele_clear_etag' [-Wunused-function]
hpricot_scan.rl:237:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_clear_##prop(VALUE self) { \
               ^
<scratch space>:95:1: note: expanded from here
hpricot_ele_clear_etag
^
hpricot_scan.rl:258:1: warning: unused function 'hpricot_ele_get_etag' [-Wunused-function]
hpricot_scan.rl:241:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_get_##prop(VALUE self) { \
               ^
<scratch space>:96:1: note: expanded from here
hpricot_ele_get_etag
^
hpricot_scan.rl:259:1: warning: unused function 'hpricot_ele_set_children' [-Wunused-function]
H_PROP(children, H_ELE_CHILDREN);
^
hpricot_scan.rl:233:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_set_##prop(VALUE self, VALUE x) { \
               ^
<scratch space>:97:1: note: expanded from here
hpricot_ele_set_children
^
hpricot_scan.rl:259:1: warning: unused function 'hpricot_ele_clear_children' [-Wunused-function]
hpricot_scan.rl:237:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_clear_##prop(VALUE self) { \
               ^
<scratch space>:98:1: note: expanded from here
hpricot_ele_clear_children
^
hpricot_scan.rl:259:1: warning: unused function 'hpricot_ele_get_children' [-Wunused-function]
hpricot_scan.rl:241:16: note: expanded from macro 'H_PROP'
  static VALUE hpricot_ele_get_##prop(VALUE self) { \
               ^
<scratch space>:99:1: note: expanded from here
hpricot_ele_get_children
^
264 warnings generated.
linking shared-object hpricot_scan.bundle

current directory: /Users/shu/Desktop/rails-projects/medi_navi/vendor/bundle/ruby/2.6.0/gems/hpricot-0.8.6/ext/hpricot_scan
make DESTDIR\= install
/usr/bin/install -c -m 0755 hpricot_scan.bundle ./.gem.20211006-8801-1mm100v
