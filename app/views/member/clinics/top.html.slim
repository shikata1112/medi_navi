  - content_for(:body_attributes) do
    data-turbolinks="false"

  .top-image
    .clinic-top-image
    .top-band
      p.top-app-logo
        i.fas.fa-clinic-medical
        |  Medi Navi


  .container
    .row
      .text-center.search-form
        = form_tag(clinics_search_path, method: :get) do
          = text_field_tag :search, "", placeholder: " クリニック名・駅名・住所・電話番号", class: "search-field"
          = button_tag type: 'submit', class: 'btn btn-info search-submit' do
            i.fas.fa-search
            |  検索する

    .row.prefecture-searchmap
      .page-header
        h4
          i.fas.fa-globe-asia
          |  都道府県から探す

      = javascript_include_tag 'jquery.japan-map.min.js'
      javascript:
        
        $(function(){
            var areas = [
              {"code": 1 , "name":"北海道地方", "color":"#ca93ea", "hoverColor":"gray", "hoverfontSize":"15", "prefectures":[1]},
              {"code": 2 , "name":"東北地方",   "color":"#a7a5ea", "hoverColor":"gray", "prefectures":[2,3,4,5,6,7]},
              {"code": 3 , "name":"関東地方",   "color":"#84b0f6", "hoverColor":"gray", "prefectures":[8,9,10,11,12,13,14]},
              {"code": 4 , "name":"北陸・甲信越地方",   "color":"#52d49c", "hoverColor":"gray", "prefectures":[15,16,17,18,19,20]},
              {"code": 4 , "name":"東海地方",   "color":"#77e18e", "hoverColor":"gray", "prefectures":[21,22,23,24]},
              {"code": 6 , "name":"近畿地方",   "color":"#f2db7b", "hoverColor":"gray", "prefectures":[25,26,27,28,29,30]},
              {"code": 7 , "name":"中国地方",   "color":"#f9ca6c", "hoverColor":"gray", "prefectures":[31,32,33,34,35]},
              {"code": 8 , "name":"四国地方",   "color":"#fbad8b", "hoverColor":"gray", "prefectures":[36,37,38,39]},
              {"code": 9 , "name":"九州地方",   "color":"#f7a6a6", "hoverColor":"gray", "prefectures":[40,41,42,43,44,45,46]},
              {"code":10 , "name":"沖縄地方",   "color":"#ea89c4", "hoverColor":"gray", "prefectures":[47]}
            ];

            $("#map-container").japanMap(
                {
                    width: 700,
                    selection: "prefecture",
                    areas: areas,
                    backgroundColor : "white",
                    borderLineColor: "black",
                    borderLineWidth : 0.25,
                    lineColor : "#a0a0a0",
                    lineWidth: 1,
                    drawsBoxLine: true,
                    movesIslands : true,
                    showsPrefectureName: true,
                    prefectureNameType: "short",
                    fontShadowColor : "black",
                    fontSize : 11,
                    fontColor : "areaColor",
                    onSelect:function(data){
                        window.location.href = 'http://35.72.2.224/clinics/prefecture_search?name=' + data.name;
                  },
                }
            );
        });

      #map-container

    .row
      .page-header
        h4
          i.fas.fa-map-marked-alt
          |  近くのクリニックを探す

      #map style='height: 400px; width: 700px;'

      - google_api = "https://maps.googleapis.com/maps/api/js?key=#{ ENV['GOOGLE_MAP_API'] }&callback=initMap".html_safe
      script{ async src=google_api }

      - if member_signed_in?
        javascript:

          let map;
          let marker = [];
          let infoWindow = [];
          let markerData = gon.clinics;

          function initMap() {
            geocoder = new google.maps.Geocoder()

            map = new google.maps.Map(document.getElementById('map'), {
              // コントローラーで定義した変数から緯度経度を呼び出し、マップの中心に表示
              center: {
                lat: gon.member.latitude,
                lng: gon.member.longitude
              },
              zoom: 15,
            });

            // 繰り返し処理でマーカーと吹き出しを複数表示させる
            for (var i = 0; i < markerData.length; i++) {
              let id = markerData[i]['id']

                    // 各地点の緯度経度を算出
              markerLatLng = new google.maps.LatLng({
                lat: markerData[i]['latitude'],
                lng: markerData[i]['longitude']
              });

              // 各地点のマーカーを作成
              marker[i] = new google.maps.Marker({
                position: markerLatLng,
                map: map
              });

              // マーカーにクリックイベントを追加
              markerEvent(i);
            }
          }

          // マーカーをクリックしたら吹き出しを表示
          function markerEvent(i) {
            marker[i].addListener('click', function () {
              infoWindow[i].open(map, marker[i]);
            });

            let id = markerData[i]['id']

            infoWindow[i] = new google.maps.InfoWindow({
              content: `<a href='/member/clinics/${ id }'>${ markerData[i]['name'] }</a>`
            });
          }
      - else
        javascript:

          let map;
          let marker = [];
          let infoWindow = [];
          let markerData = gon.clinics;

          function initMap() {
            geocoder = new google.maps.Geocoder()

            map = new google.maps.Map(document.getElementById('map'), {
              // コントローラーで定義した変数から緯度経度を呼び出し、マップの中心に表示
              center: {
                lat: 35.681519,
                lng: 139.767464
              },
              zoom: 14,
            });

            // 繰り返し処理でマーカーと吹き出しを複数表示させる
            for (var i = 0; i < markerData.length; i++) {
              let id = markerData[i]['id']

                    // 各地点の緯度経度を算出
              markerLatLng = new google.maps.LatLng({
                lat: markerData[i]['latitude'],
                lng: markerData[i]['longitude']
              });

              // 各地点のマーカーを作成
              marker[i] = new google.maps.Marker({
                position: markerLatLng,
                map: map
              });

              // マーカーにクリックイベントを追加
              markerEvent(i);
            }
          }

          // マーカーをクリックしたら吹き出しを表示
          function markerEvent(i) {
            marker[i].addListener('click', function () {
              infoWindow[i].open(map, marker[i]);
            });

            let id = markerData[i]['id']

            infoWindow[i] = new google.maps.InfoWindow({
              //content: `<a href='/member/clinics/${ id }'>${ markerData[i]['name'] }</a>`
              content: `<a href='/members/sign_in'>${ markerData[i]['name'] }</a>`
            });
          }
